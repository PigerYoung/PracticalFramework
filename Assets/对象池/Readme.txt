对象池在我之前的博客上有讲过https://blog.csdn.net/qq_62947569/article/details/129812598

  频繁的创建和销毁对象会造成性能开销
  创建对象的时候，系统会为这个对象开辟一片新的空间。销毁对象的时候，这个对象会变成内存垃圾，
  当内存垃圾达到一定程度，就会触发垃圾回收机制，清理内存垃圾，由于此时在清理垃圾，所以程序有可能就会变卡。

为了改善这个问题，就可以使用对象池。
对象池原理：
  1.当需要创建对象时，不直接创建而是从对象池中取，如果对象池中有就取出来用，如果对象池里没有就创建该对象
  2.当要销毁对象时，不直接销毁，而是放进对象池中，以便下一次创建对象时使用


GunObject为枪的设计脚本
ObjectPool为对象池脚本--Framework
ObjectAtPool为对象池中对象挂载的脚本，作用是激活失活时执行的方法，一般是用来恢复对象的初始数据等操作，因此就会出现不同的对象池需要不同的ObjectAtPool脚本（我这里想用一个脚本实现不同对象池中对象激活失活的效果但是好像用委托实现不了）--Framework
ObjectPoolManager用来统一管理各个对象池的对象池管理器--Framework

其中注意的是：
1.一个物体对应一个ObjectAtPool脚本，不同的物体激活失活和清洗数据的方式不一样
2.一个对象池对应一个物体预制件
3.ObjectPoolManager有三个方法，1.获取对象，2.放回对象，3.初始化对象池（在使用对象池之前需要先初始化对象池，让其有一定的数量）
